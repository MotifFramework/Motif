.m-flex__element(
    @direction: row,
    @wrap: nowrap, 
    @align: normal,
    @inline: false
) {
    flex-direction: @direction;
    flex-wrap: @wrap;

    & when not (@align = normal) {
        align-items: @align;
    }

    & when (@inline = true) {
        display: inline-flex;
    }

    & when (@inline = false) {
        display: flex;
    }
}

.m-flex__order(@number: 0) {
    order: @number;
}

.m-flex(
    @grow: 0, 
    @shrink: 1, 
    @basis: auto
) {
    flex: @grow @shrink @basis;
}
.m-flex__gutters(@size:@full-side) {
    /**
     * As of 2020, all gap related properties work in Flexbox
     * as well as CSS Grid. The following will apply our grid
     * gutters to any child of a flexbox container that runs
     * this mixin. This will also remove the gutters applied 
     * via padding to any children utilizing a grid column class. 
    */
    #mixed > .m-grid__gap(@mobile-margin);

    > [class*="grid__lg"],
    > [class*="grid__med"],
    > [class*="grid__sm"] {
        padding: 0; // remove grid column padding
    }

    @media @medium-screens-only {
        #mixed > .m-grid__gap(@tablet-margin);
    }

    @media @large-screens-min {
        #mixed > .m-grid__gap(@base-margin);
    }

}