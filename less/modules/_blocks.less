/*

Wrapper

This is the site-wide containing class. Put it around anything you want to be 
contained in the "site width". By default, caps off at `1150px`.

*/
.wrapper {
    width: 92%;
    margin-left: auto;
    margin-right: auto;
}
@media @x-large-screens-min {
    .wrapper {
        width: 80%;
        max-width: @1150px;
    }
}

/*

Animated Revealing/Hiding Block Modules

When JavaScript is enabled, these blocks are used (most easily in conjunction 
with Motif jQuery plugins) to reveal and hide blocks of content, sometimes 
accompanied by CSS3 animations.

*/

.js {

    /*
    
    Reveal Target

    `.reveal__target` is a simple class that is accessibly hidden by default.
    Add the `.is-revealed` class to show it.

        <div class="reveal__target">
            I am hidden.
        </div>
        <div class="reveal__target is-revealed">
            I am no longer hidden.
        </div>

    */

    .reveal__target {
        &:extend( .is-hidden );

        &.is-revealed {

            &:extend( .isnt-hidden );

            /* Pretty */
            overflow: visible;
        }
    }

    /*
    
    Expand Target

    `.expand__target` has a maximum height of `0` by default, and once it 
    receives the `.is-expanded` class, animates in height to its maximum value. 
    This is the cheap CSS way of expanding animation, as in collapsible 
    accordions. More precise timing most likely requires JS enhancement.

        <div class="expand__target">
            I am hidden from view.
        </div>
        <div class="expand__target is-expanded">
            I have expanded into view.
        </div>

    */

    .expand__target,
    .fade__target {
        &:extend( .relative-container );

        // Display & Box Model
        max-height: 0;
        overflow: hidden;
    }
        .expand__target.is-expanded,
        .fade__target.is-faded {
            max-height: 999px;
        }
        .expand__target.is-expanded,
        .fade__target.is-faded,
        .expand__target.was-expanded,
        .fade__target.was-faded {

            // Mixins
            .transition( all, 0.65s, ease-in-out );
        }

    /*
    
    Fade Target

    `.fade__target` is the same as `.expand__target` (in that it grows in 
    height), but it adds opacity fading to the mix.

        <div class="fade__target">
            I am hidden.
        </div>
        <div class="fade__target is-faded">
            I have faded and expanded into view.
        </div>

    */

    .fade__target {
        .opacity(0);

        &.is-faded {
            .opacity(1);
        }
    }
}


.no-transition {
    .transition( none ) !important;
}

/*

Main Nav Module

A minor enhancement to the Reveal or Expand Target modules if added to the
main navigation bar. This snippet, on Medium screens and larger, makes sure
the expandable Nav (on smaller screens) is no longer hidden, and that the 
Menu Title (be it "Main Menu", the hamburger icon, etc.) is hidden from view.

    <nav class="nav-bar--menu" role="navigation">
        <h3 class="nav-bar__title js-expand" id="reveal-main-nav">
            <svg class="icon"><use xlink:href="#rows"></svg>
            Main Menu
        </h3>
        <ul class="nav-bar__list--x--forceful expand__target" id="main-nav-list">
            ...
        </ul>
    </nav>

*/
@media @medium-screens-min {
    .js {
        .menu__list {
            max-height: 999px;
        }
    }
    .menu__title  {
        display: none;
    }
}

/*

Tabs

The tabs module (and accompanying plugin) creates a very basic widget that 
allows embedding and basic styling.

````tabs
<section class="tabs js-tabs">
    <nav role="navigation">
        <ul>
            <li>
                <a href="#first-tab">
                    First Tab
                </a>
            </li>
            <li>
                <a href="#second-tab">
                    Second Tab
                </a>
            </li>
        </ul>
    </nav>
    <div>
        <section id="first-tab">
            <h3>First Tab</h3>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
        </section>
        <section id="second-tab">
            <h3>Second Tab</h3>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
        </section>
    </div>
</section>
````

*/

.js {
    .tabs {
        > nav + *,
        &__section {
            position: relative;
            overflow: hidden;
        }
    }
    .tabs > nav + * > *,
    .tab {
        display: none;

        &.is-current {
            display: block;
        }
    }
}
