// Importing Lato font via Google Fonts
@import url(http://fonts.googleapis.com/css?family=Lato:300,400,700,900);

/*

Config

*/

// Color Variables

// Greys
@grey-1: @grey;
@grey-2: #cfcbca;
@grey-3: #f7f7f9;
@grey-4: #ddd;

@blue-1: @blue;
@blue-2: #00a4d8;
@blue-3: #eaf7ff;
@blue-4: #024f82;

@green-1: @green;
@green-2: #72bc44;
@green-3: #f4faf2;

@red-1: @red;
@red-2: #e63c4d;
@red-3: #f6e1df;

// Font Declarations
@lato: "Lato", @stack-sans-serif;

// This is how you'd import the Lato font straight from the folder:

// @lato-light: "Lato Light", @stack-sans-serif;
// @lato-regular: "Lato Regular", @stack-sans-serif;
// @lato-bold: "Lato Bold", @stack-sans-serif;
// @lato-black: "Lato Black", @stack-sans-serif;


/*

Font Faces

*/

// This is how you'd import the Lato font straight from the folder:

// Lato
// @font-face {
//     .web-font("Lato Light", lato, LatoLatinLight-Regular);
// }
// @font-face {
//     .web-font("Lato Regular", lato, LatoLatin-Regular);
// }
// @font-face {
//     .web-font("Lato Bold", lato, LatoLatin-Bold);
// }
// @font-face {
//     .web-font("Lato Black", lato, LatoLatinBlack-Regular);
// }

/* 

Applied Font Faces

These classes based on every typeface used on the project, including many which were 
embedded via `@font-face` declarations.

*/

.lato-light,
.lato-regular,
.lato-bold,
.lato-black {
    font-family: @lato;
}
.lato-light {
    font-weight: 300;
}
.lato-regular {
    font-weight: 400;
}
.lato-bold {
    font-weight: 700;
}
.lato-black {
    font-weight: 900;
}

// This is how you'd import the Lato font straight from the folder:

// .lato-light {
//     font-family: @lato-light;
// }
// .lato-regular {
//     font-family: @lato-regular;
// }
// .lato-bold {
//     font-family: @lato-bold;
// }
// .lato-black {
//     font-family: @lato-black;
// }

/*

Type Styles

*/

h1,
h2,
h3,
h4,
h5,
h6,
.primary-heading {
    &:extend( .lato-bold );
}

h1,
h2,
h3,
h4,
h5,
h6,
.primary-heading,
.secondary-heading {
    color: @primary-header-color;
}

.secondary-heading  {
    &:extend( .lato-light );
}
.tertiary-heading  {
    &:extend( .lato-black );

    color: @grey;
    text-transform: uppercase;
}

/*

Body Text

A quick class to help make any element's text look like the site's default body text.

*/

body,
.body-text {
    &:extend( .lato-regular );
}

dt,
th,
.input-label,
strong {
    font-weight: 700;
}

/*

Blockquote

*/

.blockquote {
    padding-left: @full-side;
    font-size: 128%;
    color: @grey;
    border-left: 7px solid @grey-4;
}


/*

Forms

*/

input,
textarea {

    // Vars
    @inner-shadow: fadeout(@black, 95%);

    padding: @half-vertical @full-side;
    background: @white;
    border: 1px solid @grey-4;

    // Mixins
    &:extend( .body-text );
    line-height: normal;
    .border-radius( @default-radius );
    .box-shadow-inset(0, @3px, @3px, @inner-shadow);

    &:hover,
    &:focus,
    &:active,
    &.is-current {
        border-color: @dark-grey;
    }
}
textarea {
    /* Display & Box Model */
    // Why 147px? To match the height of two vertical single-line inputs
    min-height: @147px;
}

a,
.link {
    &:extend( .lato-bold );
}

/*

Buttons

*/

[class*="btn"] {
    
    // Extends
    &:extend( .lato-bold );

    // Mixins
    .border-radius( @default-radius );

    background-color: @grey-3;
    border: 1px solid @grey-2;

    &,
    &:hover,
    &:focus,
    &.is-current {
        color: @light-black;
    }
    &:hover,
    &:focus,
    &.is-current {
        background-color: darken(@grey-3, 5%);
        border-color: @grey-1;
    }
}
.btn {
    &--blue,
    &--primary {
        .m-button-color( @blue, @dark-blue );
    }
    &--red,
    &--danger {
        .m-button-color( @red, @dark-red );
    }
}


/*

Panels

````panels-alt
<div class="panel--alt">
    <h3>This is a Panel</h3>
    <p>This is a <a href="#">feedback message</a> for the user.</p>
    <p><a href="#" class="btn">User Action</a></p>
</div>
<div class="panel--alt">
    <p>This is a feedback panel with no heading.</p>
</div>
````

````panels-inverse
<div class="panel--inverse">
    <h3>This is a Panel</h3>
    <p>This is a <a href="#">feedback message</a> for the user.</p>
    <p><a href="#" class="btn">User Action</a></p>
</div>
<div class="panel--inverse">
    <p>This is a feedback panel with no heading.</p>
</div>
````

*/

.panel,
[class*="panel-"],
[class*="-panel"] {
    .border-radius( @default-radius );

    color: @light-black;
    border: 1px solid @grey-2;
    background-color: @grey-3;
}

.panel--alt {
    background-color: @white;
}
.panel--inverse {
    color: @white;
    background-color: @blue;
    border-color: @blue;

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        color: inherit;
    }

    a {
        &,
        &:hover,
        &:focus {
            color: inherit;
        }
        &:hover,
        &:focus {
            color: @grey-2;
        }
    }

    .btn {
        &,
        &:hover,
        &:focus {
            color: @light-black;
        }
    }
}

.alert-panel {
    &--info {
        border-color: @blue-2;
        background-color: @blue-3;
    }
    &--error {
        border-color: @red-2;
        background-color: @red-3;
    }
    &--success {
        border-color: @green-2;
        background-color: @green-3;
    }
}

/*

Figures

*/

.figure,
[class*="figure--"] {
    > a {
        padding: @quarter-vertical;
        border: 1px solid @light-grey;

        &:hover,
        &:focus {
            border-color: @light-blue;
        }
    }
}
.figure figcaption,
.figcaption {
    &:extend( [class*="petite-text"] );
    padding: @half-vertical @full-side;
}


/*

List Modules

*/

/*

Nav Bar

A quick navigation bar, typically good for prototyping the main menu of a site.

````nav-bar
<nav class="nav-bar--menu" role="navigation">
    <h3 class="nav-bar__title js-expand"
     id="reveal-main-nav"
     data-reveal="main-nav-list">
        <svg class="icon"><use xlink:href="#rows"></svg>
        <b class="button-label">Main Menu</b>
    </h3>
    <ul class="nav-bar__list--x--forceful expand__target" id="main-nav-list">
        <li>
            <a class="nav-bar__link is-current" href="#">
                Current Nav Link
            </a>
        </li>
        <li>
            <a class="nav-bar__link" href="#">
                Nav Link
            </a>
        </li>
        <li>
            <a class="nav-bar__link" href="#">
                Nav Link
            </a>
        </li>
    </ul>
</nav>
````

*/

.nav-bar {
    &__title {

        // Create
        margin: 0;
        padding: @half-vertical 4%;
        display: inline-block;
        color: @white;
        background: @blue-1;
        cursor: pointer;

        &:hover,
        &:focus,
        &.is-expanded {
            background: @blue-4;
        }

    }
    &__link {
        color: @white;
        text-decoration: none;
        padding: @half-vertical 4%;
        
        &:hover,
        &:focus,
        &.is-current {
            color: @white;

            // Mixins
            background: @blue-4;
        }
    }
}
[class*="nav-bar__list"] {
    margin: 0;
    
    // Mixins
    background: @blue-1;

    ul {
        margin: 0;
    }
}
@media @small-screens-min {

    [class*="nav-bar__list"] {
        > li,
        [class*="list--x"] > li {
            width: 50%;

            &:nth-child( odd ) {
                clear: both;
            }
        }
    }
    .nav-bar {
        &__link {
            padding: @half-vertical @full-side;
        }
    }
}
@media @medium-screens-min {
    .nav-bar {

        &__link {
            padding: @full-vertical @full-side;
        }

        .js & {
            &--menu {
                .nav-bar__title {
                    display: none;
                }
                [class*="nav-bar__list"] {
                    max-height: 999px;
                }
            }
        }
    }

    [class*="nav-bar__list"] {

        background: @blue-1;

        > li,
        [class*="list--x"] > li {
            width: auto;

            &:nth-child( odd ) {
                clear: none;
            }
        }
    }
}


/*

Vertical Nav

````vertical-nav
<ul class="nav--vert">
    <li>
        <a href="#">Nav Link</a>
    </li>
    <li>
        <a href="#" class="is-current">Current Nav Link</a>
        <ul>
            <li>
                <a href="#">Nav Link</a>
            </li>
            <li>
                <a href="#">Nav Link</a>
            </li>
            <li>
                <a href="#" class="is-current">Current Nav Link</a>
            </li>
            <li>
                <a href="#">Nav Link</a>
            </li>
        </ul>
    </li>
    <li>
        <a href="#">Nav Link</a>
    </li>
    <li>
        <a href="#">Nav Link</a>
    </li>
    <li>
        <a href="#">Nav Link</a>
    </li>
</ul>
````

*/

.nav--vert {
    ul& {
        &:extend( .list--unstyled );
    }
    a {
        color: @blue-4;
        padding: @quarter-vertical @full-side;
        display: block;
        text-decoration: none;
    }
    a:hover,
    a:focus,
    .is-current {
        background-color: @blue-3;
    }
    li ul {
        margin: 0;
        padding: 0 0 0 @full-side;
    
        li {
            list-style: none outside none;
        }
    } 
}


/*

Breadcrumb

*/

.breadcrumb {
    &__list--x {
        text-transform: capitalize;
    }
        li {
            &:before {
                content: "/";
                margin-right: @half-side;
            }
            &:first-child:before {
                content: "";
                margin: 0;
            }
        }
}

/*

Button List

*/

[class*="button-list--x"] {

    li {
        &:not(:first-child) a {
            .border-radius-left( 0 );
        }

        &:not(:last-child) a {
            .border-radius-right( 0 );
        }
    }
    a {
        border-left-width: 0;
    }
    li:first-child a {
        border-left-width: 1px;
    }

}


/*

Tabs

*/

.tabs {
    .margin-leader();

    nav > ul {
        &:extend( [class*="list--x"] all );
    }
    nav > ul,
    &__list--x,
    &__list--x--forceful {

        border-bottom: 1px solid @grey-4;
        margin-bottom: @full-vertical;

        a {

            /* Extends .lato-bold */
            &:extend( .lato-bold );

            // Mixins
            .border-radius-top( @default-radius );

            padding: @half-vertical @full-side;
            color: @grey-2;
            text-decoration: none;
            position: relative;
            bottom: -1px;
            z-index: 30;
            border: 1px solid transparent;

            &:hover,
            &:focus {
                color: @light-black;
            }
        }
        .is-current {
            color: @light-black;
            background-color: @white;
            border-color: @grey-2;
            border-bottom-color: transparent;
            z-index: 60;
        }
    }

    .js.csstransitions & {
        > nav + *,
        &__section {

            // Mixins
            .transition( height, 0.3s, @easeOutCubic );
        }
    }
    > nav + * > *,
    .tab {
        > :first-child {
            margin-top: 0;
        }
    }
}

/*

Tables

*/

td[data-th]:before {

    /* Pretty */
    font-weight: 700;
}
@media @medium-screens-min {
    th {
        border-bottom: @border-width solid @grey-4;
    }
    th + th,
    td + td {
        border-left: @border-width solid @grey-4;
    }
    tr + tr td {
        border-top: @border-width solid @grey-4;
    }
    tbody tr:nth-child( odd ),
    table > tr:nth-child( odd ) {
        background: @grey-3;
    }
}

/*

Messaging

*/

.bubble {

    // Variables
    @wisp-width: @5px;
    @bubble-color: @white;
    @shadow: fadeout(@black, 50%);
    @shadow-radius: @7px;

    // Create
    margin: 0;
    padding: @half-vertical;
    background-color: @bubble-color;
    position: relative;

    // Mixins
    .border-radius( @default-radius );
    .box-shadow(0, 0, @shadow-radius, @shadow);
    .transition(opacity, 0.15s, linear);

    &:after {
        position: absolute;
        border: @wisp-width solid transparent;
    
        // Mixins
        .pseudo-clear();
    }
    &.left-wisp,
    &.right-wisp {
        &:after {
            top: 50%;
            margin-top: -@wisp-width;
        }
    }
    &.left-wisp {
        &:after {
            left: -@wisp-width * 2;
            border-right-color: @bubble-color;
        }
    }
    &.right-wisp {
        &:after {
            right: -@wisp-width * 2;
            border-left-color: @bubble-color;
        }
    }
    &.top-wisp,
    &.bottom-wisp {
        &:after {
            left: 50%;
            margin-left: -@wisp-width;
        }
    }
    &.top-wisp {
        &:after {
            top: -@wisp-width * 2;
            border-bottom-color: @bubble-color;
        }
    }
    &.bottom-wisp {
        &:after {
            bottom: -@wisp-width * 2;
            border-top-color: @bubble-color;
        }
    }
}

/*

Input Alerts

*/

[class*="input-alert"] {

    // Variables
    @wisp-width: @5px;
    @bubble-color: @white;
    @shadow: fadeout(@black, 50%);
    @shadow-radius: @7px;

    // Mixins
    &:extend( .bubble all );
    .box-shadow-none();

    padding: @quarter-vertical @half-vertical;
    color: @white;
    
    &:after {
        left: @half-vertical;
        margin-left: 0;
        top: -@wisp-width * 2;
        border-bottom-color: @bubble-color;
    }
}
.input-alert {
    &--warning {
        .input-alert-color(@warning-color);
    }
    &--info {
        .input-alert-color(@info-color);
    }
    &--error {
        .input-alert-color(@error-color);
    }
    &--success {
        .input-alert-color(@success-color);
    }
}

.no-boxshadow {
    .bubble {
        border: 1px solid @grey;
    }
}


/*

Form Modules

*/

.attached-label {

    // Mixins
    .border-radius( @default-radius );

    /* Pretty */
    border: 1px solid @grey-4;

    &:hover,
    &:focus,
    &:active,
    &.is-current {
        border-color: @dark-grey;
    }

    .label {
        text-align: center;
        padding: 0 @full-side;
        background-color: @grey-3;
        border-left: 1px solid @grey-4;
        border-right: 1px solid @grey-4;

        &:first-child,
        + input {
            border-left: none;
        }
    }
    input,
    [class*="btn"] {

        // Mixins
        .border-radius(0);

        /* Pretty */
        border: none;
    }

    input + .label,
    .label:last-child {
        border-right: none;
    }
}