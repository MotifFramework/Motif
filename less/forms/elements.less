/*

Forms

*/

form {
    margin: 0;
}

fieldset {
    border: none;
    margin: 0;
    padding: 0;
}

legend {
    width: 100%;
    border: 0;
    padding: 0;
    display: block;
    white-space: normal;
}

/*

Basic Form Elements

Inputs and textareas are set to `width: 100%` to adapt to the width of their 
wrapper. (Great for grids.) Select boxes are set to the width of their content,
maxing out at `100%`.

Almost all the form elements in Motif are best used inside a `label`.

    <label>
        Text Field
        <input type="text" name="text" required>
    </label>

*/

input,
select,
textarea {
    font-size: 100%;
    margin: 0;
    display: block;
}

input,
textarea {

    // Variables
    @input-side-padding: ( 1rem * ( @input-padding / @root-text-size ) );

    // Create
    width: 100%;
    font-size: 1em;
    padding: @quarter-vertical @input-side-padding;
    outline: none;

    &:hover,
    &:focus,
    &:active,
    &.is-current {
        z-index: 1;        
    }
}

input {
    line-height: normal;

    &[type="button"],
    &[type="reset"],
    &[type="submit"] {
        -webkit-appearance: button;
        display: inline-block;
        cursor: pointer;
    }

    &[disabled] {
        cursor: default;
    }
    &::-moz-focus-inner {
        border: 0;
        padding: 0;
    }

    &[type="checkbox"],
    &[type="radio"] {
        margin: 3px;
        padding: 0;
        box-sizing: border-box;
        position: relative;
        vertical-align: top;
        width: auto;
    }

    &[type="search"] {
        -webkit-appearance: textfield;

        &::-webkit-search-cancel-button,
        &::-webkit-search-decoration {
            -webkit-appearance: none;
        }
    }
}

textarea {
    overflow: auto;
    vertical-align: top;
    height: @full-vertical * 4;
}

select {
    width: auto;
    max-width: 100%;
    font-size: 0.8125em;
}


/*

Input Label Elements

Child form elements of the `.elements__input-label` class are given a little bit of 
spacing to separate them from the label text. (See also `.elements__input-label` in the
form `type.less` file.)

````input-label-elements
<label class="elements__input-label">
    Text Field
    <input type="text" name="text" placeholder="Placeholder text" required>
</label>
<label class="elements__input-label">
    Textarea
    <textarea placeholder="Placeholder text"></textarea>
</label>
<label class="elements__input-label">
    Select
    <select>
        <option>Placeholder text</option>
    </select>
</label>
````

*/

.elements__input-label {

    input,
    textarea,
    select {
    
        // Mixins
        .m-vertical-rhythm__margin-vertical(0.5);
    }
}

/*

Input Widths

While you are encouraged to use the responsive grid system in conjunction with 
your form styles, sometimes it's useful to have form field widths that are 
simply consistent across viewports. These are those.

    <label class="elements__input-label">
        Text Field
        <input class="elements__input--xs" type="text" name="text" required>
    </label>

*/

.elements__input--eighth {
    width: 12.5%;
}

.elements__input--quarter {
    width: 25%;
}

.elements__input--half {
    width: 50%;
}

.elements__input--xxxs {
    max-width: 30px;
}

.elements__input--xxs {
    max-width: 50px;
}

.elements__input--xs {
    max-width: 100px;
}

.elements__input--s {
    max-width: 175px;
}

.elements__input--m {
    max-width: 250px;
}

.elements__input--l {
    max-width: 350px;
}

/*

Form Modules

````attached-label-before
<label class="elements__attached-label">
    <small class="label">$</small>
    <input type="num" id="attached-label-before" required>
</label>
````

````attached-label-after
<label class="elements__attached-label">
    <input type="text" id="attached-label-after" required>
    <small class="label">.com</small>
</label>
````

````attached-label-before-and-after
<label class="elements__attached-label">
    <small class="label">www.</small>
    <input type="text" id="attached-label" placeholder="domain" required>
    <small class="label">.com</small>
</label>
````

````attached-label-submit
<form class="elements__attached-label">
    <label class="is-hidden" for="attached-label-submit">Search</label>
    <input type="search" id="attached-label-submit" required>
    <div>
        <button type="submit" class="button__primary">
            <svg class="icon"><use xlink:href="#search"></svg>
            <b class="is-hidden">Submit</b>
        </button>
    </div>
</form>
````

*/

.elements__attached-label {
    display: table;
    overflow: hidden;

    > * {
        margin-top: 0;
        display: table-cell;
        vertical-align: middle;

        > :first-child {
            margin-top: 0;
        }
    }

    // TODO: Update with final button selector
    [class*="button"] {
        display: block;
        width: 100%;
    }
}

/*

Input Label

The `.input-label` class should be added to form labels that want a little 
extra styling for the label text.

(You may need to do some fancy things with hidden or altered labels, which is
why these styles aren't added to the `label` element by default.)

    <label class="elements__input-label">
        Text Field
        <input type="text" name="text" required>
    </label>

There are also input descriptions, which go directly underneath the label text,
and input hints that typically go underneath the input field.

    <label class="elements__input-label">
        Text Field
        
        <small class="elements__input-desc">
            This is a small description of the field.
        </small>
        
        <input type="text" name="text" required>
        
        <strong class="elements__input-hint">
            This is an important hint.
        </strong>
    </label>

*/


.elements__input-label,
.elements__input-hint,
.elements__input-desc {

    &:extend( .presentational__new-line );
}

.elements__input-hint,
.elements__input-desc {

    &:extend( .styles__body-text );
}

.elements__input-label {

    // Mixins
    .m-vertical-rhythm__padding-leader( 1 );
}

.elements__input-hint {
    color: @grey;

    // Mixins
    .m-vertical-rhythm__margin-leader( 0.25 );
}

.elements__input-desc {

    // Mixins
    .m-vertical-rhythm__margin-leader( 0 );
}


/*

Fieldset

A simple class to add to fieldsets that want a little more spacing.

*/

.elements__fieldset {

    // Mixins
    .m-vertical-rhythm__margin-leader( 1 );
    .m-vertical-rhythm__padding-trailer( 1 );
}

/*

Checkbox List

Lists of radio or checkbox inputs should typically be just that: lists. In 
Motif, you're encouraged to mark up your input lists as semantically as 
possible, meaning a fieldset, with a legend, and a list of inputs:

    <fieldset>
        <legend>
            <b class="elements__input-label">This is a question for a radio list?</b>
        </legend>

        <ul class="elements__checkbox-list">
            <li>
                <label class="media__media-object">
                    <input class="media__media-object__figure"
                     type="radio"
                     name="radioList"
                     value="Yes">

                    <b class="media__media-object__desc">
                        Yes
                    </b>
                </label>
            </li>
            <li>
                <label class="media__media-object">
                    <input class="media__media-object__figure"
                     type="radio"
                     name="radioList"
                     value="No">

                    <b class="media__media-object__desc">
                        No
                    </b>
                </label>
            </li>
        </ul>
    </fieldset>

*/

.elements__checkbox-list {

    // Mixins
    .m-vertical-rhythm__margin-leader( 0.5 );
}

legend + .elements__checkbox-list {

    // Mixins
    .m-vertical-rhythm__margin-leader( 0 );
}

legend {

    .elements__input-label {

        // Mixins
        .m-vertical-rhythm__padding-trailer( 0.25 );
    }

    + .elements__input-desc {

        /* Positioning */
        position: relative;
        top: -@5px;
    }
}

